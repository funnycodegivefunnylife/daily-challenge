#!/bin/bash

# LeetCode Module Generator - Usage Examples and Help
# This script shows various ways to use the module generators

echo "üöÄ LeetCode Module Generators"
echo "============================="
echo ""

echo "üìã Available Scripts:"
echo "1. generate_module.sh         - Basic module generator"
echo "2. generate_advanced_module.sh - Advanced module generator with options"
echo ""

echo "üí° Basic Usage Examples:"
echo "========================"
echo ""
echo "# Generate basic module with default Solution class"
echo "./generate_module.sh 1234"
echo ""
echo "# Generate basic module with custom class name"
echo "./generate_module.sh 1234 TwoSum"
echo ""

echo "üöÄ Advanced Usage Examples:"
echo "==========================="
echo ""
echo "# Show help"
echo "./generate_advanced_module.sh --help"
echo ""
echo "# Generate with custom class name"
echo "./generate_advanced_module.sh 1234 -c TwoSum"
echo ""
echo "# Generate array problem (easy difficulty)"
echo "./generate_advanced_module.sh 1 -c TwoSum -t array -d easy"
echo ""
echo "# Generate tree problem (medium difficulty)"
echo "./generate_advanced_module.sh 104 -c MaxDepth -t tree -d easy"
echo ""
echo "# Generate string problem (hard difficulty)"
echo "./generate_advanced_module.sh 30 -c SubstringConcatenation -t string -d hard"
echo ""

echo "üìÇ Problem Types Available:"
echo "=========================="
echo "- array       : Array manipulation problems"
echo "- string      : String processing problems"
echo "- tree        : Binary tree problems"
echo "- linkedlist  : Linked list problems"
echo "- graph       : Graph algorithms"
echo "- dp          : Dynamic programming"
echo "- greedy      : Greedy algorithms"
echo "- math        : Mathematical problems"
echo "- backtracking: Backtracking algorithms"
echo "- sorting     : Sorting algorithms"
echo "- searching   : Search algorithms"
echo "- stack       : Stack data structure"
echo "- queue       : Queue data structure"
echo "- heap        : Heap/Priority queue"
echo "- trie        : Trie data structure"
echo ""

echo "üéØ Difficulty Levels:"
echo "===================="
echo "- easy        : üü¢ Easy problems"
echo "- medium      : üü° Medium problems"
echo "- hard        : üî¥ Hard problems"
echo ""

echo "üìÅ Generated Structure:"
echo "======================="
echo "For problem ID 1234, the following structure is created:"
echo ""
echo "src/main/java/leetcode/challenge/leetcode_1234/"
echo "‚îú‚îÄ‚îÄ Solution.java          # Main solution class"
echo "‚îî‚îÄ‚îÄ README.md             # Problem documentation (advanced only)"
echo ""
echo "src/test/java/leetcode/challenge/leetcode_1234/"
echo "‚îî‚îÄ‚îÄ SolutionTest.java     # Test class with empty test methods"
echo ""

echo "‚ö° Quick Commands:"
echo "=================="
echo "# Run tests for specific module"
echo "./gradlew test --tests '*leetcode_1234*'"
echo ""
echo "# Run tests with detailed output"
echo "./gradlew test --tests '*leetcode_1234*' --info"
echo ""
echo "# Run all tests"
echo "./gradlew test"
echo ""
echo "# Build project"
echo "./gradlew build"
echo ""

echo "üìù Tips:"
echo "========"
echo "1. Always update the problem description and link after generation"
echo "2. Implement the solution method according to the problem requirements"
echo "3. Add comprehensive test cases covering edge cases"
echo "4. Use meaningful variable names and add comments"
echo "5. Consider time and space complexity optimizations"
echo ""

echo "üîß Cleanup (if needed):"
echo "======================="
echo "# Remove generated test modules"
echo "rm -rf src/main/java/leetcode/challenge/leetcode_9999"
echo "rm -rf src/test/java/leetcode/challenge/leetcode_9999"
echo "rm -rf src/main/java/leetcode/challenge/leetcode_1111"
echo "rm -rf src/test/java/leetcode/challenge/leetcode_1111"
echo "rm -rf src/main/java/leetcode/challenge/leetcode_2222"
echo "rm -rf src/test/java/leetcode/challenge/leetcode_2222"
echo ""
